package com.taxifleet.server.dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.taxifleet.server.dao.tables.DbTable;
import com.taxifleet.server.dao.tables.Status;
import com.taxifleet.server.dao.tables.Taxi;

public class StatusTableWatcher extends TableWatcher<Status> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 9011079914693109053L;

	private Status outdatedData;
	private List<TableObserver> observers;
	private static final String QUERY = "SELECT * FROM dbo.TAXI WHERE dbo.TAXI.atualizado = "
			+ SqlConstants.OUTDATED_BIT.value();
	public static final String TABLE_NAME = "Taxi";

	public class ModelStream<T> {
		private T model;
		
		public void setModel(T model) {
			this.model = model;
		}
		
		public synchronized <T extends DbTable> T peekData() {
			T aux = (T) this.model;
			model = null;
			return aux;
		}
	}
	
	public StatusTableWatcher(long watchInterval) {
		super(watchInterval);
	}

	@Override
	public Status getOutdatedData() {
		// TODO Auto-generated method stub
		return outdatedData;
	}

	@Override
	public void watch(ResultSet rs) throws SQLException {
		String placa = rs.getString("Placa");
		float latitude = rs.getFloat("Latitude");
		float longitude = rs.getFloat("Longitude");
		int disponibilidade = rs.getInt("Disponibilidade");
		int atualizado = rs.getInt("Atualizado");
		outdatedData = new Status(placa, latitude, longitude, disponibilidade,
				atualizado);
	}

	@Override
	public String getSqlStatement() {
		return QUERY;
	}

	@Override
	public String getWatchetTableName() {
		return TABLE_NAME;
	}

	@Override
	public void registerObserver(TableObserver o) {
		if (observers == null)
			observers = new ArrayList<>();

		observers.add(o);
	}

	@Override
	public void notifyObservers() {
		for (TableObserver o : observers) {
			o.update(outdatedData);
		}
	}
}
