package com.taxifleet.server.network.rmi;

import java.io.Serializable;
import java.net.InetAddress;
import java.net.UnknownHostException;

import com.taxifleet.server.BasicServer;
import com.taxifleet.server.network.NetworkNode;

public class NetworNodes implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -848383090796256443L;

	private NetworkNode actualNode;
	private NetworkNode firstNode;
	private int size;

	public static void main(String[] args) throws UnknownHostException {
		NetworNodes t = new NetworNodes();
		InetAddress local = InetAddress.getLocalHost();
		BasicServer b1 = new BasicServer(local);
		BasicServer b2 = new BasicServer(local);
		BasicServer b3 = new BasicServer(local);
		BasicServer b4 = new BasicServer(local);
		BasicServer b5 = new BasicServer(local);

		t.addNode(b1);
		t.addNode(b2);
		t.addNode(b3);
		t.addNode(b4);
		t.addNode(b5);

		while (t.hasNext()) {
			System.out.println("count");
			t.next();
		}

	}

	public boolean hasNext() {
		return this.actualNode != null;
	}

	public NetworkNode next() {
		if (actualNode == null)
			throw new RuntimeException("NetworkNodes is empty.");

		NetworkNode result = actualNode.clone();

		actualNode = actualNode.getNextNode();

		return result;
	}

	public void addNode(NetworkNode node) {
		size++;
		if (this.actualNode == null) {
			this.actualNode = node;
			return;
		}

		NetworkNode actual = this.actualNode;

		while (actual.getNextNode() != null) {
			actual = actual.getNextNode();
		}

		actual.setNextNode(node);
	}

}
